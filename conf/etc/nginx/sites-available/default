# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Redirect to HTTPS
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# TO DO: Make server_name a parameter
	server_name 45.79.191.25;
	return 301 https://$server_name$request_uri;
}
# HTTPS server
#
server {
	listen 443;

	# TO DO: Make server_name a parameter
	server_name 45.79.191.25;

	root /opt/piecewise_web;
	index index.html index.htm;

	location = /stats { rewrite ^ /stats/; }
	location /stats  { try_files $uri @stats; }
	location @stats {
		include uwsgi_params;
		uwsgi_param SCRIPT_NAME /stats;
		uwsgi_modifier1 30;
		uwsgi_pass unix:///tmp/uwsgi-piecewise.sock;
	}

	location /app {
		alias /opt/piecewise_web/app/;
	}

	location = /collector { rewrite ^ /collector/; }
	location /collector  { try_files $uri @collector; }
	location @collector {
		include uwsgi_params;
		uwsgi_param SCRIPT_NAME /collector;
		uwsgi_modifier1 30;
		uwsgi_pass unix:///tmp/uwsgi-collector.sock;
	}
	location /collector/retrieve {
		try_files $uri @collector;
		auth_basic "Custom Data";
		auth_basic_user_file /opt/piecewise.git/htpasswd;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /admin {
		auth_basic "Custom Data Admin";
		auth_basic_user_file /opt/piecewise.git/htpasswd;
	}

	ssl on;
	ssl_certificate /etc/nginx/ssl/localcert.pem;
	ssl_certificate_key /etc/nginx/ssl/localcert.key;

	ssl_session_timeout 5m;

	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	ssl_prefer_server_ciphers on;
}