---
- name: install certbot dependencies
  apt: name={{ item }} state=present
  with_items:
    - build-essential
    - libssl-dev
    - libffi-dev
    - python-dev
    - git
    - python-pip
    - python-virtualenv
    - dialog
    - libaugeas0
    - ca-certificates
- name: install Python cryptography module
  pip: name=cryptography

- name: Create certbot directory
  file: path=/root/certbot-auto state=directory

- name: download certbot
  get_url: >
    url=https://dl.eff.org/certbot-auto
    dest=/root/certbot-auto
- name: check if we've generated a cert already
  stat: path=/etc/nginx/ssl/fullchain.pem
  register: cert_stats

- name: generate certs (first time)
  # become_user: '{{ deploy_user }}'
  shell: "/root/certbot-auto certonly --standalone -d piecewise.opentechinstitute.org --email critzo@opentechinstitute.org --non-interactive --agree-tos"
  when: cert_stats.stat.exists == False

- name: generate certs (subsequent time)
  become: yes
  # become_user: '{{ deploy_user }}'
  shell: "/root/certbot-auto certonly --webroot -w /opt/piecewise_web -d piecewise.opentechinstitute.org --email critzo@opentechinstitute.org --non-interactive --agree-tos"
  shell: "mv /root/certbot-auto/fullchain.pem /etc/nginx/ssl/"
  shell: "mv /root/certbot-auto/privkey.key /etc/nginx/ssl/"
  when: cert_stats.stat.exists == True

- name: hup nginx
  service: name=nginx state=reloaded
